from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
import datetime


def admin_panel():
    keyb = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç', callback_data='–°–æ–∑–¥–∞—Ç—å_–ø–æ—Å—Ç')
    but2 = InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—Å—Ç—ã', callback_data='–ò–∑–º–µ–Ω–∏—Ç—å_–ø–æ—Å—Ç—ã')
    but6 = InlineKeyboardButton('–†–∞—Å—Å–ø–∏—Å–∞–Ω–∏–µ', callback_data='–†–∞—Å—Å–ø–∏—Å–∞–Ω–∏–µ')
    keyb.row(but1)
    keyb.row(but2)
    keyb.row(but6)
    return keyb


def cancel():
    keyb = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞', callback_data=f'–û—Ç–º–µ–Ω–∞')
    keyb.row(but1)
    return keyb


def add_media_post(post_id):
    keyb = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –º–µ–¥–∏–∞', callback_data=f'–î–æ–±–∞–≤–∏—Ç—å_–º–µ–¥–∏–∞;{post_id}')
    but2 = InlineKeyboardButton('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', callback_data=f'–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å_–º–µ–¥–∏–∞;{post_id}')
    keyb.row(but1)
    keyb.row(but2)
    return keyb


def finish_media(post_id):
    keyb = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data=f'–ó–∞–≤–µ—Ä—à–∏—Ç—å_–º–µ–¥–∏–∞;{post_id}')
    keyb.row(but1)
    return keyb


def apply_post(post_id):
    keyb = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data=f'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å_–ø–æ—Å—Ç;{post_id}')
    but2 = InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å', callback_data=f'–ò–∑–º–µ–Ω–∏—Ç—å_–ø–æ—Å—Ç;{post_id}')
    keyb.row(but1)
    keyb.row(but2)
    return keyb


def edit_post(post_id):
    keyb = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–¢–µ–∫—Å—Ç', callback_data=f'Ch_post;–¢–µ–∫—Å—Ç;{post_id}')
    but11 = InlineKeyboardButton('–ú–µ–¥–∏–∞', callback_data=f'Ch_post;–ú–µ–¥–∏–∞;{post_id}')
    but2 = InlineKeyboardButton('–î–∞—Ç–∞ —Å—Ç–∞—Ä—Ç–∞', callback_data=f'Ch_post;–î–∞—Ç–∞_—Å—Ç–∞—Ä—Ç–∞;{post_id}')
    but22 = InlineKeyboardButton('–ß–∞—Ç', callback_data=f'Ch_post;–ß–∞—Ç;{post_id}')
    but3 = InlineKeyboardButton('–¢–∞–π–º–µ—Ä', callback_data=f'Ch_post;–¢–∞–π–º–µ—Ä;{post_id}')
    but5 = InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å', callback_data=f'Ch_post;–£–¥–∞–ª–∏—Ç—å;{post_id}')
    but6 = InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'–ò–∑–º–µ–Ω–∏—Ç—å_–ø–æ—Å—Ç—ã')
    keyb.row(but1)
    keyb.row(but11)
    keyb.row(but2)
    keyb.row(but22)
    keyb.row(but3)
    keyb.row(but5)
    keyb.row(but6)
    return keyb


def ch_post_chat_act(post_id):
    keyb = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å', callback_data=f'EDIT;–î–æ–±–∞–≤–∏—Ç—å_—á–∞—Ç;+;{post_id}')
    but2 = InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å', callback_data=f'EDIT;–£–¥–∞–ª–∏—Ç—å_—á–∞—Ç;+;{post_id}')
    but6 = InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'–ò–∑–º–µ–Ω–∏—Ç—å_–ø–æ—Å—Ç;{post_id}')
    keyb.row(but1)
    keyb.row(but2)
    keyb.row(but6)
    return keyb


def back_to_edit_post(post_id):
    keyb = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'–ò–∑–º–µ–Ω–∏—Ç—å_–ø–æ—Å—Ç;{post_id}')
    keyb.row(but1)
    return keyb


def ex_dell_post(post_id):
    keyb = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–î–∞', callback_data=f'–¢–æ—á–Ω–æ_—É–¥–∞–ª–∏—Ç—å_–ø–æ—Å—Ç;–î–∞;{post_id}')
    but2 = InlineKeyboardButton('–ù–µ—Ç', callback_data=f'–¢–æ—á–Ω–æ_—É–¥–∞–ª–∏—Ç—å_–ø–æ—Å—Ç;–ù–µ—Ç;{post_id}')
    but6 = InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'–ò–∑–º–µ–Ω–∏—Ç—å_–ø–æ—Å—Ç;{post_id}')
    keyb.row(but1)
    keyb.row(but2)
    keyb.row(but6)
    return keyb


def act_trigger(trig_id):
    keyb = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä', callback_data=f'–î–æ–±–∞–≤–∏—Ç—å_—Ç—Ä–∏–≥;{trig_id}')
    but2 = InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä', callback_data=f'–£–¥–∞–ª–∏—Ç—å_—Ç—Ä–∏–≥;{trig_id}')
    but3 = InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç', callback_data=f'–î–æ–±–∞–≤–∏—Ç—å_—á–∞—Ç;{trig_id}')
    but4 = InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å —á–∞—Ç', callback_data=f'–£–¥–∞–ª–∏—Ç—å_—á–∞—Ç;{trig_id}')
    keyb.row(but1)
    keyb.row(but2)
    keyb.row(but3)
    keyb.row(but4)
    return keyb


def gen_schedule_but(date: datetime.date, schedule):
    dict_days_week = {0: '–ü–ù', 1: '–í–¢', 2: '–°–†', 3: '–ß–¢', 4: '–ü–¢', 5: '–°–ë', 6: '–í–°'}
    em = 'üü¢' if str(date) in schedule.schedule.schedule.keys() else '‚ö™Ô∏è'
    but1 = InlineKeyboardButton(
        f'{dict_days_week[date.weekday()]}: {date.day}-0{date.month} | {em}',
        callback_data=f'Schedule_day;{str(date)}')
    return but1


def week_schedule(schedule):
    keyb = InlineKeyboardMarkup()

    date_tod = datetime.date.today()
    week_days = []

    for day in range(7):
        week_days.append(date_tod + datetime.timedelta(days=day))

    for date in week_days:
        but = gen_schedule_but(date, schedule)
        keyb.row(but)
    return keyb


def day_schedule(date, schedule):
    from database import PostPost

    keyb = InlineKeyboardMarkup()

    if date in schedule.schedule.schedule.keys():
        dict_posts = schedule.schedule.schedule[date]
        for date_time, items in dict_posts.items():

            for item in items:
                post = PostPost.objects(post_id=int(item)).first()
                but1 = InlineKeyboardButton(f'id-{post.post_id}: {str(post.text)[:15]}',
                                            callback_data=f'Post_menu;{post.post_id}')
                keyb.row(but1)
        but1 = InlineKeyboardButton('–°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç üÜï', callback_data='–°–æ–∑–¥–∞—Ç—å_–ø–æ—Å—Ç')
        keyb.row(but1)
    else:
        but1 = InlineKeyboardButton('–°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç', callback_data='–°–æ–∑–¥–∞—Ç—å_–ø–æ—Å—Ç')
        but2 = InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=f'–†–∞—Å—Å–ø–∏—Å–∞–Ω–∏–µ')
        keyb.row(but1)
        keyb.row(but2)

    return keyb
